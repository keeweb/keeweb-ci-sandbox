name: Build
on:
  push:
    tags: [ '*' ]
jobs:

  web:
    runs-on: ubuntu-latest
    steps:
      - name: Get current git tag
        id: get_tag
        uses: keeweb/get-tag@v2
        with:
          tagRegex: "^v(\\d+\\.\\d+\\.\\d+)$"
          tagRegexGroup: 1
      - uses: actions/checkout@v2
        with:
          repository: 'keeweb/keeweb'
          ref: 'develop'
#      - name: Install npm modules
#        run: npm ci
#      - name: Test
#        run: npm test
#      - name: Grunt
#        run: grunt
      - name: Fake build
        run: mkdir dist && echo hello > dist/index.html
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.html
          path: dist

#  linux:
#    runs-on: ubuntu-latest
#    needs:
#      - web
#    steps:
#      - name: Get current git tag
#        id: get_tag
#        uses: keeweb/get-tag@v2
#        with:
#          tagRegex: "^v(\\d+\\.\\d+\\.\\d+)$"
#          tagRegexGroup: 1
#      - uses: actions/checkout@v2
#        with:
#          repository: 'keeweb/keeweb'
#          ref: 'develop'
#      - name: Download artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.html
#          path: dist
#      - name: Write secrets
#        env:
#          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
#          KEEWEB_SIGN: ${{ secrets.KEEWEB_SIGN }}
#        run: |
#          mkdir keys
#          echo "$PRIVATE_KEY" > keys/private-key.pem
#          echo "$KEEWEB_SIGN" > keys/keeweb-sign.json
#      - name: Build in Docker
#        uses: ./.github/actions/linux-build
#      - name: Upload AppImage artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.AppImage
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.AppImage
#      - name: Upload snap artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.snap
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.snap
#      - name: Upload deb artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.x64.deb
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.x64.deb
#      - name: Upload zip artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.x64.zip
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.x64.zip
#      - name: Upload rpm artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.x86_64.rpm
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.linux.x86_64.rpm
#      - name: Upload update artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: UpdateDesktop.zip
#          path: dist/desktop/UpdateDesktop.zip

#  darwin:
#    runs-on: macos-latest
#    needs:
#      - web
#    steps:
#      - name: Get current git tag
#        id: get_tag
#        uses: keeweb/get-tag@v2
#        with:
#          tagRegex: "^v(\\d+\\.\\d+\\.\\d+)$"
#          tagRegexGroup: 1
#      - uses: actions/checkout@v2
#        with:
#          repository: 'keeweb/keeweb'
#          ref: 'develop'
#      - name: Download artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.html
#          path: dist
#      - name: Install npm modules
#        run: |
#          npm ci
#          cd desktop
#          npm ci
#          cd ..
#      - name: Install grunt
#        run: sudo npm i -g grunt-cli
#      - name: Write secrets
#        env:
#          CODESIGN: ${{ secrets.CODESIGN }}
#          APPLE_DEPLOY_PASSWORD: ${{ secrets.APPLE_DEPLOY_PASSWORD }}
#          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
#        run: |
#          mkdir keys
#          echo "$CODESIGN" > keys/codesign.json
#          xcrun altool --store-password-in-keychain-item "AC_PASSWORD" -u "$APPLE_ID_USERNAME" -p "$APPLE_DEPLOY_PASSWORD"
#      - uses: keeweb/import-codesign-certs@v1
#        with:
#          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
#          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
#      - name: Grunt
#        run: grunt desktop-darwin
#      - name: Upload dmg artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.mac.dmg
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.mac.dmg

#  win32:
#    runs-on: windows-latest
#    needs:
#      - web
#    steps:
#      - name: Get current git tag
#        id: get_tag
#        uses: keeweb/get-tag@v2
#        with:
#          tagRegex: "^v(\\d+\\.\\d+\\.\\d+)$"
#          tagRegexGroup: 1
#        with:
#          repository: 'keeweb/keeweb'
#          ref: 'develop'
#      - name: Download artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.html
#          path: dist
#      - name: Install npm modules
#        run: |
#          npm ci
#          cd desktop
#          npm ci
#          cd ..
#      - name: Install grunt
#        run: npm i -g grunt-cli
#      - name: Write secrets
#        env:
#          CODESIGN: ${{ secrets.CODESIGN }}
#          MS_CODESIGN_PRIVATE_KEY_CLIENT: ${{ secrets.MS_CODESIGN_PRIVATE_KEY_CLIENT }}
#          MS_CODESIGN_PUBLIC_KEY_CLIENT: ${{ secrets.MS_CODESIGN_PUBLIC_KEY_CLIENT }}
#          MS_CODESIGN_PUBLIC_KEY_SERVER: ${{ secrets.MS_CODESIGN_PUBLIC_KEY_SERVER }}
#        run: |
#          mkdir keys
#          echo $Env:CODESIGN > keys/codesign.json
#          mkdir keys/code-signing
#          echo $Env:MS_CODESIGN_PRIVATE_KEY_CLIENT > keys/code-signing/private-key-client.pem
#          echo $Env:MS_CODESIGN_PUBLIC_KEY_CLIENT > keys/code-signing/public-key-client.pem
#          echo $Env:MS_CODESIGN_PUBLIC_KEY_SERVER > keys/code-signing/public-key-server.pem
#      - name: Grunt
#        run: grunt desktop-win32
#      - name: Upload ia32 exe artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.win.ia32.exe
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.win.ia32.exe
#      - name: Upload ia32 zip artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.win.ia32.zip
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.win.ia32.zip
#      - name: Upload x64 exe artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.win.x64.exe
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.win.x64.exe
#      - name: Upload x64 zip artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.win.x64.zip
#          path: dist/desktop/KeeWeb-${{ steps.get_tag.outputs.tag }}.win.x64.zip

  publish:
    runs-on: ubuntu-latest
    needs:
      - web
    steps:
      - name: Get current git tag
        id: get_tag
        uses: keeweb/get-tag@v2
        with:
          tagRegex: "^v(\\d+\\.\\d+\\.\\d+)$"
          tagRegexGroup: 1
      - uses: actions/checkout@v2
        with:
          repository: 'keeweb/keeweb'
          ref: 'develop'
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: KeeWeb-${{ steps.get_tag.outputs.tag }}.html
          path: html
      - name: Zip html
        run: |
          cd html
          zip -vr ../KeeWeb-${{ steps.get_tag.outputs.tag }}.html.zip .
#      - name: Create release
#        id: create_release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Desktop apps v${{ steps.get_tag.outputs.tag }}
#          draft: true
#          prerelease: false
#      - name: Upload html asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: KeeWeb-${{ steps.get_tag.outputs.tag }}.html.zip
#          asset_name: KeeWeb-${{ steps.get_tag.outputs.tag }}.html.zip
#          asset_content_type: application/octet-stream
#      - name: Publish release
#        uses: ./.github/actions/publish-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          version: ${{ steps.get_tag.outputs.tag }}
#          release_id: ${{ steps.create_release.outputs.id }}
      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: 'gh-pages'
          path: gh-pages
      - name: Do some changes
        run: |
          cd gh-pages
          git rm -r .
          cd ..
          cp html/* gh-pages
          ls gh-pages
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am v${{ steps.get_tag.outputs.tag }}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'gh-pages'
          directory: 'gh-pages'
